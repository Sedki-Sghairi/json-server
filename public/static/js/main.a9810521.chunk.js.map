{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutCompoent.js","components/DishdetailComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/Dishes.js","redux/Comments.js","redux/Promotions.js","redux/Leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Link","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","message","agree","contactType","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","height","isOpen","navbar","NavLink","outline","toggle","innerRef","input","Footer","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","CommentForm","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","leadersFailed","addLeaders","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","fetchDishes","fetchLeaders","fetchComments","fetchPromos","TransitionGroup","CSSTransition","classNames","timeout","Switch","Route","path","component","filter","featured","dishErrMess","promotions","promo","leaderErrMess","exact","match","parseInt","params","commentsErrMess","Redirect","location","key","withRouter","connect","firstName","lastName","tel","feedback","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","BrowserRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9810521.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";    \r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/'> Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                            Menu\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n   constructor(props){\r\n       super(props)\r\n\r\n       this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n   handleSubmit(values) {\r\n    // alert('feedback: ' + JSON.stringify(values));\r\n    this.props.postFeedback(values.firstname, values.lastname, values.telnum,\r\n         values.email, values.message, values.agree, values.contactType);\r\n    this.props.resetFeedbackForm();\r\n  \r\n}\r\n   render(){\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/'> Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>            \r\n        </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n                <h3>Send us your Feedback</h3>\r\n            </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                <Form model =\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                            placeholder=\"First Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                            placeholder=\"Tel. Number\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".telnum\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, validEmail\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email Address'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default Contact;","import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\n    import { NavLink } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/about'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nexport default function Home( props ) {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row align-item-start\">\r\n                    <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components'\r\n\r\nconst RenderLeader = ({leader}) =>{\r\n    return(\r\n        <Stagger in>\r\n            <Fade in>\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.image}/>\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        </Stagger>\r\n    )\r\n}\r\nfunction About(props) {\r\n    \r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader key ={leader.id} leader={leader}/>\r\n        );\r\n    });\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import { Card, CardBody, CardImg, CardText, CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Row, Col, Label, Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport React, { Component } from 'react'\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal()\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            <Button outline onClick={this.toggleModal}> Comment</Button> \r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\" className=\"col-12\">Rating</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                            className=\"form-control\"\r\n                                            >\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\">5</option>\r\n                                            </Control.select>\r\n             \r\n                                    </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                            placeholder=\"Your Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".name\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                        </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                        </LocalForm>\r\n                </ModalBody>\r\n            </Modal> \r\n            </>       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n        return(\r\n            <FadeTransform in\r\n            transformProps={{\r\n                exitTransform: 'scale(.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n            )\r\n  }\r\n\r\n  function RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null)\r\n    return(\r\n        <>\r\n            <h1>Comments</h1>\r\n            <ul className='list-unstyled'>\r\n            <Stagger in>\r\n                {comments.map((comment) =>{\r\n                        return(\r\n                        <Fade in>  \r\n                        <div key={comment.id}>\r\n                        <li>{comment.comment}</li><br/>\r\n                        <li>-- {comment.author} ,\r\n                        {new Intl.DateTimeFormat(\"en-US\", {\r\n                                year: \"numeric\",\r\n                                month: \"short\",\r\n                                day: \"2-digit\"\r\n                            }).format(new Date(Date.parse(comment.date)))}</li><br/>\r\n                        </div>\r\n                        </Fade>  \r\n                        )\r\n                    })}\r\n            </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </>\r\n    );\r\nelse\r\n    return(\r\n        <div></div>\r\n    );\r\n    \r\n  }\r\n\r\n  const  DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null){\r\n    return (\r\n        <div className='container'>\r\n           <div className=\"row\">\r\n           <Breadcrumb>\r\n                  <BreadcrumbItem>\r\n                        <Link to='/menu'> Menu</Link>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem active>\r\n                        {props.dish.name}\r\n                  </BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n            </div>            \r\n            <div  className=\"col-12 col-md-5 m-1\">\r\n             {props.dish && <RenderDish dish = {props.dish}/>}\r\n            </div>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n             {(props.comments) &&\r\n             <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}/>           \r\n            }\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n  }\r\n\r\nexport default DishDetail;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n// feedback\r\n\r\nexport const postFeedback = (firstName, lastName, tel, email, feedback, agree, contactType) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n      name: firstName + ' ' + lastName,\r\n      tel: tel,\r\n      email: email,\r\n      feedback: feedback,\r\n      agree: agree,\r\n      contactType: contactType\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => alert(JSON.stringify(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n// end feedback\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n// LEADERS\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n// END LEADERS\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent'\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent'\r\nimport About from './AboutCompoent'\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstName, lastName, tel, email, feedback, agree, contactType) => dispatch(postFeedback(firstName, lastName, tel, email, feedback, agree, contactType)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  fetchLeaders: () => { dispatch(fetchLeaders())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos())\r\n});\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    dishes: state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}\r\n    />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n    return ( \r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() =>\r\n               <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                        postFeedback ={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import './App.css';\nimport { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n// import { Provider } from 'react-redux'\n// import {createStore} from 'redux';\n// import { Reducer, initialState } from './redux/reducer'\n\n// const store = createStore(\n//   Reducer, // reducer\n//   initialState, // our initialState\n// );\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","\r\nimport { Dishes } from './Dishes';\r\nimport { Comments } from './Comments';\r\nimport { Promotions } from './Promotions';\r\nimport { Leaders } from './Leaders';\r\nimport {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}